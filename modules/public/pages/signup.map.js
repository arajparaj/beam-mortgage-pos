{"version":3,"file":"signup.min.js","sources":["webpack:///client/pages/signup/index.jsx","webpack:///?d41d***","webpack:///client/components/alert.jsx?3c20**","webpack:///client/pages/signup/form.jsx","webpack:///client/pages/signup/actions.js","webpack:///client/pages/signup/constants.js","webpack:///client/pages/signup/store.js"],"sourcesContent":["/* global window */\n'use strict';\nconst Form = require('./form.jsx');\nconst React = require('react');\nconst ReactDOM = require('react-dom');\n\n\nclass Page {\n    static blastoff() {\n\n        this.mainElement = ReactDOM.render(\n            <Form />,\n            window.document.getElementById('app-mount')\n        );\n    }\n}\n\n\nmodule.exports = Page;\n\n\n/* $lab:coverage:off$ */\nif (!module.parent) {\n    window.page = Page;\n    Page.blastoff();\n}\n/* $lab:coverage:on$ */\n\n\n\n/** WEBPACK FOOTER **\n ** client/pages/signup/index.jsx\n **/","undefined\n\n\n/** WEBPACK FOOTER **\n ** \n **/","'use strict';\nconst React = require('react');\n\n\nconst propTypes = {\n    type: React.PropTypes.oneOf(['success', 'info', 'warning', 'danger']),\n    onClose: React.PropTypes.func,\n    message: React.PropTypes.string\n};\n\n\nclass Alert extends React.Component {\n    render() {\n\n        let close;\n\n        if (this.props.onClose) {\n            close = <button\n                type=\"button\"\n                className=\"close\"\n                onClick={this.props.onClose}>\n\n                &times;\n            </button>;\n        }\n\n        return (\n            <div className={`alert alert-${this.props.type}`}>\n                {close}\n                {this.props.message}\n            </div>\n        );\n    }\n}\n\nAlert.propTypes = propTypes;\n\n\nmodule.exports = Alert;\n\n\n\n/** WEBPACK FOOTER **\n ** client/components/alert.jsx\n **/","'use strict';\nconst Actions = require('./actions');\nconst Alert = require('../../components/alert.jsx');\nconst Button = require('../../components/form/button.jsx');\nconst ControlGroup = require('../../components/form/control-group.jsx');\nconst React = require('react');\nconst Spinner = require('../../components/form/spinner.jsx');\nconst Store = require('./store');\nconst TextControl = require('../../components/form/text-control.jsx');\n\n\nclass Form extends React.Component {\n    constructor(props) {\n\n        super(props);\n\n        this.input = {};\n        this.state = Store.getState();\n    }\n\n    componentDidMount() {\n\n        this.unsubscribeStore = Store.subscribe(this.onStoreChange.bind(this));\n\n        if (this.input.name) {\n            this.input.name.focus();\n        }\n    }\n\n    componentWillUnmount() {\n\n        this.unsubscribeStore();\n    }\n\n    onStoreChange() {\n\n        this.setState(Store.getState());\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        Actions.sendRequest({\n            name: this.input.name.value(),\n            username: this.input.username.value(),\n            password: this.input.password.value(),\n            email: this.input.email.value()\n        });\n    }\n\n    render() {\n\n        let alert = [];\n\n        if (this.state.success) {\n            alert = <Alert\n                type=\"success\"\n                message=\"Success. Redirecting...\"\n            />;\n        }\n        else if (this.state.error) {\n            alert = <Alert\n                type=\"danger\"\n                message={this.state.error}\n            />;\n        }\n\n        let formElements;\n\n        if (!this.state.success) {\n            formElements = <fieldset>\n                <TextControl\n                    ref={(c) => (this.input.name = c)}\n                    name=\"name\"\n                    label=\"Name\"\n                    hasError={this.state.hasError.name}\n                    help={this.state.help.name}\n                    disabled={this.state.loading}\n                />\n                <TextControl\n                    ref={(c) => (this.input.email = c)}\n                    name=\"email\"\n                    label=\"Email\"\n                    hasError={this.state.hasError.email}\n                    help={this.state.help.email}\n                    disabled={this.state.loading}\n                />\n                <TextControl\n                    ref={(c) => (this.input.username = c)}\n                    name=\"username\"\n                    label=\"Username\"\n                    hasError={this.state.hasError.username}\n                    help={this.state.help.username}\n                    disabled={this.state.loading}\n                />\n                <TextControl\n                    ref={(c) => (this.input.password = c)}\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    hasError={this.state.hasError.password}\n                    help={this.state.help.password}\n                    disabled={this.state.loading}\n                />\n                <ControlGroup hideLabel={true} hideHelp={true}>\n                    <Button\n                        type=\"submit\"\n                        inputClasses={{ 'btn-primary': true }}\n                        disabled={this.state.loading}>\n\n                        Create my account\n                        <Spinner space=\"left\" show={this.state.loading} />\n                    </Button>\n                </ControlGroup>\n            </fieldset>;\n        }\n\n        return (\n            <section>\n                <h1 className=\"page-header\">Sign up</h1>\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                    {alert}\n                    {formElements}\n                </form>\n            </section>\n        );\n    }\n}\n\n\nmodule.exports = Form;\n\n\n\n/** WEBPACK FOOTER **\n ** client/pages/signup/form.jsx\n **/","/* global window */\n'use strict';\nconst ApiActions = require('../../actions/api');\nconst Constants = require('./constants');\nconst Store = require('./store');\n\n\nclass Actions {\n    static sendRequest(data) {\n\n        ApiActions.post(\n            '/api/signup',\n            data,\n            Store,\n            Constants.REGISTER,\n            Constants.REGISTER_RESPONSE,\n            (err, response) => {\n\n                if (!err) {\n                    window.location.href = '/account';\n                }\n            }\n        );\n    }\n};\n\n\nmodule.exports = Actions;\n\n\n\n/** WEBPACK FOOTER **\n ** client/pages/signup/actions.js\n **/","'use strict';\nconst FluxConstant = require('flux-constant');\n\n\nmodule.exports = FluxConstant.set([\n    'REGISTER',\n    'REGISTER_RESPONSE'\n]);\n\n\n\n/** WEBPACK FOOTER **\n ** client/pages/signup/constants.js\n **/","'use strict';\nconst Constants = require('./constants');\nconst ObjectAssign = require('object-assign');\nconst ParseValidation = require('../../helpers/parse-validation');\nconst Redux = require('redux');\n\n\nconst initialState = {\n    loading: false,\n    success: false,\n    error: undefined,\n    hasError: {},\n    help: {}\n};\nconst reducer = function (state = initialState, action) {\n\n    if (action.type === Constants.REGISTER) {\n        return ObjectAssign({}, state, {\n            loading: true\n        });\n    }\n\n    if (action.type === Constants.REGISTER_RESPONSE) {\n        const validation = ParseValidation(action.response);\n\n        return ObjectAssign({}, state, {\n            loading: false,\n            success: !action.err,\n            error: validation.error,\n            hasError: validation.hasError,\n            help: validation.help\n        });\n    }\n\n    return state;\n};\n\n\nmodule.exports = Redux.createStore(reducer);\n\n\n\n/** WEBPACK FOOTER **\n ** client/pages/signup/store.js\n **/"],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAAA;ACCA;AACA;AACA;AAEA;;;;;;;AACA;AACA;AACA;AAIA;;;;;;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;;;;;;;;;AAAA;AACA;ADEA;AACA;AACA;AACA;AAHA;AACA;AAMA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAKA;;;;AArBA;AACA;AAuBA;AACA;AAEA;;;;;;;AEtCA;AACA;;;;;;;;;AAAA;AFCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA;AAAA;AACA;AADA;AACA;AAGA;AACA;AALA;AAMA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AANA;AADA;AAlCA;AA6CA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAFA;AAQA;;;;AArHA;AACA;AAwHA;;;;;;;AGpIA;AACA;AACA;;;;;AAAA;AHCA;AACA;AACA;AAEA;;;;;;;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;;;;;;AACA;AACA;AAEA;;;;;;;AI3BA;AACA;AAAA;AACA;AJEA;;;;;;;AKJA;AACA;AAAA;ALCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAEA;;;;","sourceRoot":""}